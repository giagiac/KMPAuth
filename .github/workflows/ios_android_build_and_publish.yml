name: App build
on:
  push:
    # tags:        
    #   - 'v*'
      
jobs:
  build_with_signing:
    runs-on: macos-14
    environment: IOS_ANDROID_PUBLISH_V1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          APPSTORE_CONNECT_API_KEY_BASE64: ${{ secrets.APPSTORE_CONNECT_API_KEY_BASE64 }}
          APPSTORE_API_KEY_ID: ${{ secrets.APPSTORE_API_KEY_ID }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate, provisioning profile and apikey from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
          # echo -n "$APPSTORE_CONNECT_API_KEY_BASE64" | base64 --decode -o ~/private_keys/AuthKey_$APPSTORE_API_KEY_ID.p8

          security login-keychain
      #     # create temporary keychain
      #     security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
      #     security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
      #     security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

      #     # import certificate to keychain
      #     security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
      #     security list-keychain -d user -s $KEYCHAIN_PATH

      #     # apply provisioning profile
      #     mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
      #     cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
      # - name: Build iOSApp archive
      #   run: |
      #     xcodebuild -allowProvisioningUpdates -workspace sampleApp/iosApp/iosApp.xcodeproj/project.xcworkspace \
      #     -scheme iosApp \
      #     -sdk iphoneos \
      #     -archivePath $RUNNER_TEMP/iosApp.xcarchive \
      #     -configuration Release \
      #     -destination generic/platform=iOS \
      #     clean archive

      - name: Clean up keychain and provisioning profile
        if: ${{ always() }}
        run: |
          security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
          rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision